
$margins: 10px;
$gap: 10px;
$columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
$font-height: 0.675; // defined by font metrics

@function y($i) {
  @return calc(#{$i} * 8px);
}

@function leading($i) {
  @return calc((#{y($i)} - #{$font-height} * 1em) / 2);
}

@mixin lh ($i) {
  line-height: y($i);
  transform: translateY(leading(#{$i}));
}

@mixin md {
  @media (min-width: 660px) { @content; }
}

@mixin lg {
  @media (min-width: 770px) { @content; }
}

@mixin xl {
  @media (min-width: 1024px) { @content; }
}

@mixin xxl {
  @media (min-width: 1440px) { @content; }
}

@mixin layout {
  .container {
    position: relative;
    margin-left: $margins;
    margin-right: $margins;
    display: grid;
    grid-template-columns: $columns;
    column-gap: $gap;
  }

  [class*="col-"] {
    @for $a from 1 through length($columns) {
      &.col-#{$a} { grid-column: $a; }
      @for $b from 1 through length($columns) {
        &.col-#{$a}-#{$b} { grid-column: $a / span $b; }
      }
    }

    @include md {
      @for $a from 1 through length($columns) {
        &.col-md-#{$a} { grid-column: $a; }
        @for $b from 1 through length($columns) {
          &.col-md-#{$a}-#{$b} { grid-column: $a / span $b; }
        }
      }
    }

    @include lg {
      @for $a from 1 through length($columns) {
        &.col-lg-#{$a} { grid-column: $a; }
        @for $b from 1 through length($columns) {
          &.col-lg-#{$a}-#{$b} { grid-column: $a / span $b; }
        }
      }
    }

    @include xl {
      @for $a from 1 through length($columns) {
        &.col-xl-#{$a} { grid-column: $a; }
        @for $b from 1 through length($columns) {
          &.col-xl-#{$a}-#{$b} { grid-column: $a / span $b; }
        }
      }
    }

    @include xxl {
      @for $a from 1 through length($columns) {
        &.col-xxl-#{$a} { grid-column: $a; }
        @for $b from 1 through length($columns) {
          &.col-xxl-#{$a}-#{$b} { grid-column: $a / span $b; }
        }
      }
    }
  }
}
